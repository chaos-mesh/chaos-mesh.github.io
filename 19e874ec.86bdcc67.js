(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{233:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(n),h=r,u=b["".concat(s,".").concat(h)]||b[h]||m[h]||o;return n?a.a.createElement(u,i(i({ref:t},p),{},{components:n})):a.a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(233)),s={id:"dnschaos_experiment",title:"DNSChaos Experiment",sidebar_label:"DNSChaos Experiment"},i={unversionedId:"chaos_experiments/dnschaos_experiment",id:"chaos_experiments/dnschaos_experiment",isDocsHomePage:!1,title:"DNSChaos Experiment",description:"This document describes how to create DNSChaos experiments in Chaos Mesh.",source:"@site/docs/chaos_experiments/dns_chaos.md",slug:"/chaos_experiments/dnschaos_experiment",permalink:"/docs/next/chaos_experiments/dnschaos_experiment",editUrl:"https://github.com/chaos-mesh/website/edit/master/docs/chaos_experiments/dns_chaos.md",version:"current",sidebar_label:"DNSChaos Experiment",sidebar:"docs",previous:{title:"KernelChaos Experiment",permalink:"/docs/next/chaos_experiments/kernelchaos_experiment"},next:{title:"AwsChaos Experiment",permalink:"/docs/next/chaos_experiments/awschaos_experiment"}},c=[{value:"Deploy DNS service for chaos",id:"deploy-dns-service-for-chaos",children:[]},{value:"Configuration file",id:"configuration-file",children:[]},{value:"Fields description",id:"fields-description",children:[]},{value:"Notes",id:"notes",children:[]}],p={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This document describes how to create DNSChaos experiments in Chaos Mesh."),Object(o.b)("p",null,"DNSChaos allows you to simulate fault DNS responses such as a DNS error or a random IP address after a request is sent."),Object(o.b)("h2",{id:"deploy-dns-service-for-chaos"},"Deploy DNS service for chaos"),Object(o.b)("p",null,"To create DNSChaos experiments in Chaos Mesh, you need to deploy a DNS service in Chaos Mesh by executing the command below:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"helm upgrade chaos-mesh chaos-mesh/chaos-mesh --namespace=chaos-testing --set dnsServer.create=true\n")),Object(o.b)("p",null,"When the deployment finishes, check the status of this DNS service:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"kubectl get pods -n chaos-testing -l app.kubernetes.io/component=chaos-dns-server\n")),Object(o.b)("p",null,"Make sure the Pod's ",Object(o.b)("inlineCode",{parentName:"p"},"STATUS")," is ",Object(o.b)("inlineCode",{parentName:"p"},"Running"),"."),Object(o.b)("h2",{id:"configuration-file"},"Configuration file"),Object(o.b)("p",null,"Below is a sample DNSChaos configuration file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"apiVersion: chaos-mesh.org/v1alpha1\nkind: DNSChaos\nmetadata:\n  name: busybox-dns-chaos\nspec:\n  action: random\n  patterns:\n    - google.com\n    - chaos-mesh.*\n    - github.?om\n  mode: all\n  selector:\n    namespaces:\n      - busybox\n  duration: '90s'\n  scheduler:\n    cron: '@every 100s'\n")),Object(o.b)("p",null,"For more sample files, see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/chaos-mesh/chaos-mesh/tree/master/examples"}),"examples"),". You can edit them as needed."),Object(o.b)("h2",{id:"fields-description"},"Fields description"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"action"),": Defines the chaos action for DNS chaos. Supported actions are:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"error")," - Get an error when sending the DNS request"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"random")," - Get a random IP when sending the DNS request"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"patterns"),": Choose which domain names to take effect, support the placeholder ? and wildcard ","*",", or the specified domain name."),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The wildcard ",Object(o.b)("inlineCode",{parentName:"li"},"_")," must be at the end of the string. For example, ",Object(o.b)("inlineCode",{parentName:"li"},"chaos-_.org")," is invalid."),Object(o.b)("li",{parentName:"ul"},"If the patterns is empty, will take effect on all the domain names."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"selector"),": Specifies the target pods for chaos injection. For more details, see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/next/user_guides/experiment_scope"}),"Define the Scope of Chaos Experiment"),"."))),Object(o.b)("h2",{id:"notes"},"Notes"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Currently, DNSChaos only supports record types ",Object(o.b)("inlineCode",{parentName:"p"},"A")," and ",Object(o.b)("inlineCode",{parentName:"p"},"AAAA"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"The chaos DNS service runs CoreDNS with the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/chaos-mesh/k8s_dns_chaos"}),"k8s_dns_chaos")," plugin. If the CoreDNS service in your Kubernetes cluster contains some special configurations, you can edit configMap ",Object(o.b)("inlineCode",{parentName:"p"},"dns-server-config")," to make the configuration of the chaos DNS service consistent with that of the K8s CoreDNS service as shown below:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"kubectl edit configmap dns-server-config -n chaos-testing\n")))))}l.isMDXComponent=!0}}]);