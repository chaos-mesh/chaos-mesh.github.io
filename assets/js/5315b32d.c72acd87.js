"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[4281],{89400:function(e,a,t){var n=t(91262),s=t(73148),o=t(67294),r=t(56871);a.Z=function(e){var a=e.children,t=e.className,i=function(e){var a=e.children;return o.createElement("div",{style:{marginBottom:"1.25rem"}},o.createElement(s.Z,{className:t},a))};return o.createElement(n.Z,{fallback:o.createElement(i,null,a)},(function(){var e=(0,r.p)(),t="latest"===e?"":"--version v"+function(e){if("2"===e[0])return e;var a=e.slice(0,3);return(parseFloat(a)-.7).toString()+e.slice(3)}(e);return o.createElement(i,null,a.replace("--version latest",t).trim())}))}},56871:function(e,a,t){t.d(a,{p:function(){return l}});var n=t(91262),s=t(73148),o=t(67294),r=t(52263),i=t(28084),l=function(){var e=(0,r.Z)().siteConfig,a=window.location.pathname,t=window.localStorage.getItem("docs-preferred-version-default");if(a===e.baseUrl&&t)return"current"===t?"latest":t;if(a.includes("/docs/next"))return"latest";var n=(0,i.usePluginData)("docusaurus-plugin-content-docs").versions,s=n.filter((function(e){return e.isLast}))[0].name;return n.filter((function(e){return a.includes(e.name)})).map((function(e){return e.name}))[0]||s};a.Z=function(e){var a=e.children,t=e.className,r=function(e){var a=e.children;return o.createElement("div",{style:{marginBottom:"1.25rem"}},o.createElement(s.Z,{className:t},a))};return o.createElement(n.Z,{fallback:o.createElement(r,null,a)},(function(){var e=l(),t="latest"===e?a:a.replace("latest","v"+e);return o.createElement(r,null,t)}))}},73148:function(e,a,t){t.d(a,{Z:function(){return C}});var n=t(87462),s=t(67294),o=t(86010),r=t(24544),i=t(10195),l=t(87594),c=t.n(l),p=t(83583),h=t(24973),m="codeBlockContainer_2gih",d="codeBlockContent_3z4W",u="codeBlockTitle_1Kb7",g="codeBlock_6upA",k="codeBlockWithTitle_xy-i",N="copyButton_2e3i",_="codeBlockLines_xlV7",E=t(941),f=/{([\d,-]+)}/,S=function(e){void 0===e&&(e=["js","jsBlock","jsx","python","html"]);var a={js:{start:"\\/\\/",end:""},jsBlock:{start:"\\/\\*",end:"\\*\\/"},jsx:{start:"\\{\\s*\\/\\*",end:"\\*\\/\\s*\\}"},python:{start:"#",end:""},html:{start:"\x3c!--",end:"--\x3e"}},t=["highlight-next-line","highlight-start","highlight-end"].join("|"),n=e.map((function(e){return"(?:"+a[e].start+"\\s*("+t+")\\s*"+a[e].end+")"})).join("|");return new RegExp("^\\s*(?:"+n+")\\s*$")};function C(e){var a=e.children,t=e.className,l=e.metastring,C=e.title,A=(0,E.LU)().prism,O=(0,s.useState)(!1),v=O[0],H=O[1],b=(0,s.useState)(!1),M=b[0],R=b[1];(0,s.useEffect)((function(){R(!0)}),[]);var I=(0,E.bc)(l)||C,D=(0,s.useRef)(null),y=[],$=(0,p.Z)(),G=Array.isArray(a)?a.join(""):a;if(l&&f.test(l)){var x=l.match(f)[1];y=c()(x).filter((function(e){return e>0}))}var B=t&&t.replace(/language-/,"");!B&&A.defaultLanguage&&(B=A.defaultLanguage);var w=G.replace(/\n$/,"");if(0===y.length&&void 0!==B){for(var T,V="",Z=function(e){switch(e){case"js":case"javascript":case"ts":case"typescript":return S(["js","jsBlock"]);case"jsx":case"tsx":return S(["js","jsBlock","jsx"]);case"html":return S(["js","jsBlock","html"]);case"python":case"py":return S(["python"]);default:return S()}}(B),j=G.replace(/\n$/,"").split("\n"),K=0;K<j.length;){var P=K+1,q=j[K].match(Z);if(null!==q){switch(q.slice(1).reduce((function(e,a){return e||a}),void 0)){case"highlight-next-line":V+=P+",";break;case"highlight-start":T=P;break;case"highlight-end":V+=T+"-"+(P-1)+","}j.splice(K,1)}else K+=1}y=c()(V),w=j.join("\n")}var U=function(){(0,i.Z)(w),H(!0),setTimeout((function(){return H(!1)}),2e3)};return s.createElement(r.ZP,(0,n.Z)({},r.lG,{key:String(M),theme:$,code:w,language:B}),(function(e){var a,t=e.className,r=e.style,i=e.tokens,l=e.getLineProps,c=e.getTokenProps;return s.createElement("div",{className:m},I&&s.createElement("div",{style:r,className:u},I),s.createElement("div",{className:(0,o.Z)(d,B)},s.createElement("div",{tabIndex:0,className:(0,o.Z)(t,g,"thin-scrollbar",(a={},a[k]=I,a))},s.createElement("div",{className:_,style:r},i.map((function(e,a){1===e.length&&""===e[0].content&&(e[0].content="\n");var t=l({line:e,key:a});return y.includes(a+1)&&(t.className=t.className+" docusaurus-highlight-code-line"),s.createElement("div",(0,n.Z)({key:a},t),e.map((function(e,a){return s.createElement("span",(0,n.Z)({key:a},c({token:e,key:a})))})))})))),s.createElement("button",{ref:D,type:"button","aria-label":(0,h.I)({id:"theme.CodeBlock.copyButtonAriaLabel",message:"Copy code to clipboard",description:"The ARIA label for copy code blocks button"}),className:(0,o.Z)(N),onClick:U},v?s.createElement(h.Z,{id:"theme.CodeBlock.copied",description:"The copied button label on code blocks"},"Copied"):s.createElement(h.Z,{id:"theme.CodeBlock.copy",description:"The copy button label on code blocks"},"Copy"))))}))}},4470:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return h},default:function(){return d}});var n=t(87462),s=t(63366),o=(t(67294),t(3905)),r=t(89400),i=["components"],l={id:"offline_installation",title:"Offline Installation"},c=void 0,p={unversionedId:"user_guides/offline_installation",id:"version-1.2.3/user_guides/offline_installation",isDocsHomePage:!1,title:"Offline Installation",description:"This document describes how to install Chaos Mesh in an offline environment.",source:"@site/versioned_docs/version-1.2.3/user_guides/offline_installation.md",sourceDirName:"user_guides",slug:"/user_guides/offline_installation",permalink:"/docs/1.2.3/user_guides/offline_installation",editUrl:"https://github.com/chaos-mesh/website/edit/master/versioned_docs/version-1.2.3/user_guides/offline_installation.md",tags:[],version:"1.2.3",frontMatter:{id:"offline_installation",title:"Offline Installation"},sidebar:"version-1.2.3/docs",previous:{title:"Installation",permalink:"/docs/1.2.3/user_guides/installation"},next:{title:"Define the Scope of Chaos Experiment",permalink:"/docs/1.2.3/user_guides/experiment_scope"}},h=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Prepare the installation file",id:"prepare-the-installation-file",children:[]},{value:"Install Chaos Mesh offline",id:"install-chaos-mesh-offline",children:[]}],m={toc:h};function d(e){var a=e.components,t=(0,s.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This document describes how to install Chaos Mesh in an offline environment."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Before deploying Chaos Mesh, make sure the following items have been installed:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Kubernetes version >= 1.12"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/admin/authorization/rbac"},"RBAC")," enabled (optional)"),(0,o.kt)("li",{parentName:"ul"},"Docker")),(0,o.kt)("h2",{id:"prepare-the-installation-file"},"Prepare the installation file"),(0,o.kt)("p",null,"To install Chaos Mesh offline, you need to get the installation images via an internet connection. Take the steps below:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Specify the version you want to install:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export CHAOS_MESH_VERSION="v1.1.0"\n')),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"It is recommended that you use a stable release, or you can set the version to ",(0,o.kt)("inlineCode",{parentName:"p"},"latest")," if you want to experience the latest features that are under development."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Archive the docker images of Chaos Mesh:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"#pull images of Chaos Mesh","#pull":!0,images:!0,of:!0,Chaos:!0,Mesh:!0},"docker pull pingcap/chaos-mesh:${CHAOS_MESH_VERSION}\ndocker pull pingcap/chaos-daemon:${CHAOS_MESH_VERSION}\ndocker pull pingcap/chaos-dashboard:${CHAOS_MESH_VERSION}\ndocker pull pingcap/coredns:v0.2.0\n")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"#save images of Chaos Mesh to files","#save":!0,images:!0,of:!0,Chaos:!0,Mesh:!0,to:!0,files:!0},"docker save -o ./image-chaos-mesh pingcap/chaos-mesh:${CHAOS_MESH_VERSION}\ndocker save -o ./image-chaos-daemon pingcap/chaos-daemon:${CHAOS_MESH_VERSION}\ndocker save -o ./image-chaos-dashboard pingcap/chaos-dashboard:${CHAOS_MESH_VERSION}\ndocker save -o ./image-chaos-coredns pingcap/coredns:v0.2.0\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Download the Chaos Mesh repository to your local:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'wget "https://github.com/chaos-mesh/chaos-mesh/archive/${CHAOS_MESH_VERSION}.zip"\n')),(0,o.kt)("p",{parentName:"li"},"Or you can download the latest unstable version:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/chaos-mesh/chaos-mesh/archive/master.zip\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Copy the ",(0,o.kt)("inlineCode",{parentName:"p"},"./image-chaos-mesh"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"./image-chaos-daemon"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"./image-chaos-dashboard"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"{CHAOS_MESH_VERSION}.zip")," into the offline environment."))),(0,o.kt)("h2",{id:"install-chaos-mesh-offline"},"Install Chaos Mesh offline"),(0,o.kt)("p",null,"Now that you already have the image and repo archive files in the offline environment, start installing Chaos Mesh."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Specify the version you are going to install in the offline environment:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export CHAOS_MESH_VERSION="v1.1.0"\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Load the image from the archive files:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker load -i ./image-chaos-mesh\ndocker load -i ./image-chaos-daemon\ndocker load -i ./image-chaos-dashboard\ndocker load -i ./image-chaos-coredns\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Push the Chaos Mesh images. You can choose to push them to Docker Registry or Docker Hub."),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Push images to Docker Registry"),(0,o.kt)("p",{parentName:"li"},"a. Set the Docker Registry variable, for example:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export DOCKER_REGISTRY=localhost:5000\n")),(0,o.kt)("p",{parentName:"li"},"b. Tag these images with ",(0,o.kt)("inlineCode",{parentName:"p"},"$DOCKER_REGISTRY"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export CHAOS_MESH_IMAGE=$DOCKER_REGISTRY/pingcap/chaos-mesh:${CHAOS_MESH_VERSION}\nexport CHAOS_DAEMON_IMAGE=$DOCKER_REGISTRY/pingcap/chaos-daemon:${CHAOS_MESH_VERSION}\nexport CHAOS_DASHBOARD_IMAGE=$DOCKER_REGISTRY/pingcap/chaos-dashboard:${CHAOS_MESH_VERSION}\nexport CHAOS_COREDNS_IMAGE=$DOCKER_REGISTRY/pingcap/coredns:v0.2.0\ndocker image tag pingcap/chaos-mesh:${CHAOS_MESH_VERSION} $CHAOS_MESH_IMAGE\ndocker image tag pingcap/chaos-daemon:${CHAOS_MESH_VERSION} $CHAOS_DAEMON_IMAGE\ndocker image tag pingcap/chaos-dashboard:${CHAOS_MESH_VERSION} $CHAOS_DASHBOARD_IMAGE\ndocker image tag pingcap/coredns:v0.2.0 $CHAOS_COREDNS_IMAGE\n")),(0,o.kt)("p",{parentName:"li"},"c. Push these images to Docker Registry:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker push $CHAOS_MESH_IMAGE\ndocker push $CHAOS_DAEMON_IMAGE\ndocker push $CHAOS_DASHBOARD_IMAGE\ndocker push $CHAOS_COREDNS_IMAGE\n")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"If the Docker Registry can only work locally, you need to load and push these images on each K8s node."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Push images to Docker Hub"),(0,o.kt)("p",{parentName:"li"},"a. Set the Docker Hub variable, for example:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export DOCKER_HUB=hub\n")),(0,o.kt)("p",{parentName:"li"},"b. Tag these images with ",(0,o.kt)("inlineCode",{parentName:"p"},"$DOCKER_REGISTRY"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export CHAOS_MESH_IMAGE=$DOCKER_HUB/chaos-mesh:${CHAOS_MESH_VERSION}\nexport CHAOS_DAEMON_IMAGE=$DOCKER_HUB/chaos-daemon:${CHAOS_MESH_VERSION}\nexport CHAOS_DASHBOARD_IMAGE=$DOCKER_HUB/chaos-dashboard:${CHAOS_MESH_VERSION}\nexport CHAOS_COREDNS_IMAGE=$DOCKER_HUB/coredns:v0.2.0\ndocker image tag pingcap/chaos-mesh:${CHAOS_MESH_VERSION} $CHAOS_MESH_IMAGE\ndocker image tag pingcap/chaos-daemon:${CHAOS_MESH_VERSION} $CHAOS_DAEMON_IMAGE\ndocker image tag pingcap/chaos-dashboard:${CHAOS_MESH_VERSION} $CHAOS_DASHBOARD_IMAGE\ndocker image tag pingcap/coredns:v0.2.0 $CHAOS_COREDNS_IMAGE\n")),(0,o.kt)("p",{parentName:"li"},"c. Push these images to Docker Registry:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker push $CHAOS_MESH_IMAGE\ndocker push $CHAOS_DAEMON_IMAGE\ndocker push $CHAOS_DASHBOARD_IMAGE\ndocker push $CHAOS_COREDNS_IMAGE\n"))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install Chaos Mesh offline with the following steps:"),(0,o.kt)("p",{parentName:"li"},"a. Unzip the repo archive files to a path:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"unzip ${CHAOS_MESH_VERSION}.zip -d chaos-mesh && cd chaos-mesh/*/\n")),(0,o.kt)("p",{parentName:"li"},"b. Create a namespace for installing Chaos Mesh:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace chaos-testing\n")),(0,o.kt)("p",{parentName:"li"},"c. Install Chaos Mesh by helm:"),(0,o.kt)(r.Z,{className:"language-bash",mdxType:"PickHelmVersion"},"\nhelm install chaos-mesh helm/chaos-mesh --namespace=chaos-testing\n   --set dashboard.create=true\n   --set dnsServer.create=true\n   --set chaosDaemon.image=$CHAOS_DAEMON_IMAGE\n   --set controllerManager.image=$CHAOS_MESH_IMAGE\n   --set dashboard.image=$CHAOS_DASHBOARD_IMAGE\n   --set dnsServer.image=$CHAOS_COREDNS_IMAGE\n   --version latest"),(0,o.kt)("p",{parentName:"li"},"d. Check whether Chaos Mesh pods are installed:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:"#get pods of Chaos Mesh","#get":!0,pods:!0,of:!0,Chaos:!0,Mesh:!0},"kubectl get pods --namespace chaos-testing -l app.kubernetes.io/instance=chaos-mesh\n")),(0,o.kt)("p",{parentName:"li"},"Expected output:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                        READY   STATUS    RESTARTS   AGE\nchaos-controller-manager-6d6d95cd94-kl8gs   1/1     Running   0          3m40s\nchaos-daemon-5shkv                          1/1     Running   0          3m40s\nchaos-dashboard-d998856f6-vgrjs             1/1     Running   0          3m40s\n")),(0,o.kt)("p",{parentName:"li"},"After executing the above commands, you should be able to see the output indicating that all Chaos Mesh pods are up and running. Otherwise, check the current environment according to the prompt message or create an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/chaos-mesh/issues"},"issue")," for help."))))}d.isMDXComponent=!0}}]);