"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([["567"],{98726:function(e,t,a){a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>g,frontMatter:()=>s,metadata:()=>n,toc:()=>u});var n=a(58829),i=a(23420),o=a(18407);let s={slug:"/how-to-simulate-io-faults-at-runtime",title:"How to Simulate I/O Faults at Runtime",authors:"keaoyang",image:"/img/blog/how-to-simulate-io-faults-at-runtime.jpg",tags:["Chaos Mesh","Chaos Engineering","Fault Injection"]},r,l={authorsImageUrls:[void 0]},u=[];function m(e){let t={img:"img",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Chaos Engineering - How to simulate I/O faults at runtime",src:a(30250).A+"",width:"3126",height:"1043"})}),"\n",(0,i.jsx)(t.p,{children:"In a production environment, filesystem faults might occur due to various incidents such as disk failures and administrator errors. As a Chaos Engineering platform, Chaos Mesh has supported simulating I/O faults in a filesystem ever since its early versions. By simply adding an IOChaos CustomResourceDefinition (CRD), we can watch how the filesystem fails and returns errors."})]})}function g(e={}){let{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},30250:function(e,t,a){a.d(t,{A:()=>n});let n=a.p+"assets/images/how-to-simulate-io-faults-at-runtime-39daaf89aa83a5be58402f763db0d5c5.jpg"},18407:function(e,t,a){a.d(t,{R:()=>s,x:()=>r});var n=a(36672);let i={},o=n.createContext(i);function s(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}},58829:function(e){e.exports=JSON.parse('{"permalink":"/blog/how-to-simulate-io-faults-at-runtime","editUrl":"https://github.com/chaos-mesh/website/edit/master/blog/2021-01-08-how-to-simulate-io-faults-at-runtime.md","source":"@site/blog/2021-01-08-how-to-simulate-io-faults-at-runtime.md","title":"How to Simulate I/O Faults at Runtime","description":"Chaos Engineering - How to simulate I/O faults at runtime","date":"2021-01-08T00:00:00.000Z","tags":[{"inline":true,"label":"Chaos Mesh","permalink":"/blog/tags/chaos-mesh"},{"inline":true,"label":"Chaos Engineering","permalink":"/blog/tags/chaos-engineering"},{"inline":true,"label":"Fault Injection","permalink":"/blog/tags/fault-injection"}],"readingTime":9.47,"hasTruncateMarker":true,"authors":[{"name":"Keao Yang","title":"Maintainer of Chaos Mesh","url":"https://github.com/YangKeao","imageURL":"https://avatars.githubusercontent.com/u/5244316?v=4","key":"keaoyang","page":null}],"frontMatter":{"slug":"/how-to-simulate-io-faults-at-runtime","title":"How to Simulate I/O Faults at Runtime","authors":"keaoyang","image":"/img/blog/how-to-simulate-io-faults-at-runtime.jpg","tags":["Chaos Mesh","Chaos Engineering","Fault Injection"]},"unlisted":false,"prevItem":{"title":"Celebrating One Year of Chaos Mesh: Looking Back and Ahead","permalink":"/blog/celebrating-one-year-of-chaos-mesh-looking-back-and-ahead"},"nextItem":{"title":"How a Top Game Company Uses Chaos Engineering to Improve Testing","permalink":"/blog/how-a-top-game-company-uses-chaos-engineering-to-improve-testing"}}')}}]);