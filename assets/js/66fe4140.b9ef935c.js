"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[65137],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||a;return n?i.createElement(f,r(r({ref:t},c),{},{components:n})):i.createElement(f,r({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<a;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96463:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var i=n(87462),o=(n(67294),n(3905));const a={title:"PodChaos Experiment"},r=void 0,l={unversionedId:"chaos_experiments/podchaos",id:"version-1.2.4/chaos_experiments/podchaos",title:"PodChaos Experiment",description:"This document introduces how to create PodChaos experiments.",source:"@site/versioned_docs/version-1.2.4/chaos_experiments/podchaos.md",sourceDirName:"chaos_experiments",slug:"/chaos_experiments/podchaos",permalink:"/docs/1.2.4/chaos_experiments/podchaos",draft:!1,editUrl:"https://github.com/chaos-mesh/website/edit/master/versioned_docs/version-1.2.4/chaos_experiments/podchaos.md",tags:[],version:"1.2.4",frontMatter:{title:"PodChaos Experiment"},sidebar:"version-1.2.4/docs",previous:{title:"Chaos Dashboard",permalink:"/docs/1.2.4/user_guides/dashboard"},next:{title:"NetworkChaos Experiment",permalink:"/docs/1.2.4/chaos_experiments/networkchaos"}},s={},p=[{value:"<code>pod-failure</code> configuration file",id:"pod-failure-configuration-file",level:2},{value:"<code>pod-kill</code> configuration file",id:"pod-kill-configuration-file",level:2},{value:"<code>container-kill</code> configuration file",id:"container-kill-configuration-file",level:2},{value:"Fields description",id:"fields-description",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This document introduces how to create PodChaos experiments."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Note:")),(0,o.kt)("p",{parentName:"blockquote"},"Currently, Chaos Mesh does not support simulation injection of naked pods. And it only supports some specific pods, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"deployment"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"statefulset"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"daemonset"),".")),(0,o.kt)("p",null,"PodChaos allows you to simulate pod faults or specific container issue, specifically ",(0,o.kt)("inlineCode",{parentName:"p"},"pod failure"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"pod kill")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"container kill"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"pod failure")," can be used to simulate a situation where a pod is down. In this case, the pod is unavailable for a long time."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Pod Failure")," action periodically injects errors to pods. And it will cause pod creation failure for a while. In other words, the selected pod will be unavailable in a specified period.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Pod Kill")," action kills the specified pod (ReplicaSet or something similar might be needed to ensure the pod will be restarted).")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Container Kill")," action kills the specified container in the target pods."))),(0,o.kt)("h2",{id:"pod-failure-configuration-file"},(0,o.kt)("inlineCode",{parentName:"h2"},"pod-failure")," configuration file"),(0,o.kt)("p",null,"Below is a sample ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-failure")," configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: chaos-mesh.org/v1alpha1\nkind: PodChaos\nmetadata:\n  name: pod-failure-example\n  namespace: chaos-testing\nspec:\n  action: pod-failure\n  mode: one\n  value: ''\n  duration: '30s'\n  selector:\n    labelSelectors:\n      'app.kubernetes.io/component': 'tikv'\n  scheduler:\n    cron: '@every 2m'\n")),(0,o.kt)("p",null,"For more sample files, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/chaos-mesh/tree/master/examples"},"examples"),". You can edit them as needed."),(0,o.kt)("p",null,"For a detailed description of each field in the configuration template, see ",(0,o.kt)("a",{parentName:"p",href:"#fields-description"},(0,o.kt)("inlineCode",{parentName:"a"},"Fields description")),"."),(0,o.kt)("h2",{id:"pod-kill-configuration-file"},(0,o.kt)("inlineCode",{parentName:"h2"},"pod-kill")," configuration file"),(0,o.kt)("p",null,"Below is a sample ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-kill")," configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: chaos-mesh.org/v1alpha1\nkind: PodChaos\nmetadata:\n  name: pod-kill-example\n  namespace: chaos-testing\nspec:\n  action: pod-kill\n  mode: one\n  selector:\n    namespaces:\n      - tidb-cluster-demo\n    labelSelectors:\n      'app.kubernetes.io/component': 'tikv'\n  scheduler:\n    cron: '@every 1m'\n")),(0,o.kt)("p",null,"For a detailed description of each field in the configuration template, see ",(0,o.kt)("a",{parentName:"p",href:"#fields-description"},(0,o.kt)("inlineCode",{parentName:"a"},"Fields description")),"."),(0,o.kt)("h2",{id:"container-kill-configuration-file"},(0,o.kt)("inlineCode",{parentName:"h2"},"container-kill")," configuration file"),(0,o.kt)("p",null,"Below is a sample ",(0,o.kt)("inlineCode",{parentName:"p"},"container-kill")," configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: chaos-mesh.org/v1alpha1\nkind: PodChaos\nmetadata:\n  name: container-kill-example\n  namespace: chaos-testing\nspec:\n  action: container-kill\n  mode: one\n  containerName: 'prometheus'\n  selector:\n    labelSelectors:\n      'app.kubernetes.io/component': 'monitor'\n  scheduler:\n    cron: '@every 30s'\n")),(0,o.kt)("p",null,"For a detailed description of each field in the configuration template, see ",(0,o.kt)("a",{parentName:"p",href:"#fields-description"},(0,o.kt)("inlineCode",{parentName:"a"},"Fields description")),"."),(0,o.kt)("h2",{id:"fields-description"},"Fields description"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"action")," defines the specific chaos action for the Pod. In this case, it is a Pod failure."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"mode")," defines the mode to run chaos action. Supported mode: ",(0,o.kt)("inlineCode",{parentName:"li"},"one")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"all")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"fixed")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"fixed-percent")," / ",(0,o.kt)("inlineCode",{parentName:"li"},"random-max-percent"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"value")," depends on the value of ",(0,o.kt)("inlineCode",{parentName:"li"},"mode"),". If ",(0,o.kt)("inlineCode",{parentName:"li"},"mode")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"one")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"all"),", leave ",(0,o.kt)("inlineCode",{parentName:"li"},"value")," empty. If ",(0,o.kt)("inlineCode",{parentName:"li"},"fixed"),", provide an integer of pods to do chaos action. If ",(0,o.kt)("inlineCode",{parentName:"li"},"fixed-percent"),", provide a number from 0 to 100 to specify the percent of pods the server can do chaos action. If ",(0,o.kt)("inlineCode",{parentName:"li"},"random-max-percent"),", provide a number from 0 to 100 to specify the max percent of pods to do chaos action."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"selector")," specifies the target pods for chaos injections. For more details, see ",(0,o.kt)("a",{parentName:"li",href:"/docs/1.2.4/user_guides/experiment_scope"},"Define the Scope of Chaos Experiment"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"containerName")," defines the target container name, it is needed by container kill action."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"gracePeriod")," defines the duration in seconds before the pod should be deleted. It is used in pod-kill action, and its value must be non-negative integer. The default value is zero that indicates delete immediately."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"duration")," defines the duration for each chaos experiment. The default value is ",(0,o.kt)("inlineCode",{parentName:"li"},"30s"),", which indicates that pod failure will last for 30 seconds."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"scheduler")," defines the scheduler rules for the running time of the chaos experiment. For more rule information, see ",(0,o.kt)("a",{parentName:"li",href:"https://godoc.org/github.com/robfig/cron"},"robfig/cron"),".")))}d.isMDXComponent=!0}}]);