"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[7978],{17942:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>g});var o=r(50959);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,s=function(e,t){if(null==e)return{};var r,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},h=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=c(r),p=s,g=u["".concat(l,".").concat(p)]||u[p]||m[p]||n;return r?o.createElement(g,a(a({ref:t},h),{},{components:r})):o.createElement(g,a({ref:t},h))}));function g(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,a=new Array(n);a[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:s,a[1]=i;for(var c=2;c<n;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2209:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var o=r(51163),s=(r(50959),r(17942));const n={slug:"/how-to-efficiently-stress-test-pod-memory",title:"How to efficiently stress test Pod memory",author:"Yinghao Wang",author_title:"Contributor of Chaos Mesh",author_url:"https://github.com/AsterNighT",author_image_url:"https://avatars.githubusercontent.com/u/22937027?v=4",image:"/img/blog/how-to-efficiently-stress-test-pod-memory-banner.jpg",tags:["Chaos Mesh","Chaos Engineering","StressChaos","Stress Testing"]},a=void 0,i={permalink:"/blog/how-to-efficiently-stress-test-pod-memory",editUrl:"https://github.com/chaos-mesh/website/edit/master/blog/2021-07-01-how-to-efficiently-stress-test-pod-memory.md",source:"@site/blog/2021-07-01-how-to-efficiently-stress-test-pod-memory.md",title:"How to efficiently stress test Pod memory",description:"banner",date:"2021-07-01T00:00:00.000Z",formattedDate:"July 1, 2021",tags:[{label:"Chaos Mesh",permalink:"/blog/tags/chaos-mesh"},{label:"Chaos Engineering",permalink:"/blog/tags/chaos-engineering"},{label:"StressChaos",permalink:"/blog/tags/stress-chaos"},{label:"Stress Testing",permalink:"/blog/tags/stress-testing"}],readingTime:10.015,hasTruncateMarker:!0,authors:[{name:"Yinghao Wang",title:"Contributor of Chaos Mesh",url:"https://github.com/AsterNighT",imageURL:"https://avatars.githubusercontent.com/u/22937027?v=4"}],frontMatter:{slug:"/how-to-efficiently-stress-test-pod-memory",title:"How to efficiently stress test Pod memory",author:"Yinghao Wang",author_title:"Contributor of Chaos Mesh",author_url:"https://github.com/AsterNighT",author_image_url:"https://avatars.githubusercontent.com/u/22937027?v=4",image:"/img/blog/how-to-efficiently-stress-test-pod-memory-banner.jpg",tags:["Chaos Mesh","Chaos Engineering","StressChaos","Stress Testing"]},prevItem:{title:"Securing tenant namespaces using restrict authorization feature in Chaos Mesh",permalink:"/blog/securing-tenant-namespaces-using-restrict-authorization-feature"},nextItem:{title:"Chaos Mesh Remake: One Step Closer toward Chaos as a Service",permalink:"/blog/chaos-mesh-remake-one-step-closer-towards-chaos-as-a-service"}},l={authorsImageUrls:[void 0]},c=[],h={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(u,(0,o.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"banner",src:r(37397).Z,width:"1600",height:"534"})),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/chaos-mesh"},"Chaos Mesh")," includes the StressChaos tool, which allows you to inject CPU and memory stress into your Pod. This tool can be very useful when you test or benchmark a CPU-sensitive or memory-sensitive program and want to know its behavior under pressure."),(0,s.kt)("p",null,"However, as we tested and used StressChaos, we found some issues with usability and performance. For example, why does StressChaos use far less memory than we configured? To correct these issues, we developed a new set of tests. In this article, I'll describe how we troubleshooted these issues and corrected them. This information will enable you to get the most out of StressChaos."))}m.isMDXComponent=!0},37397:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/how-to-efficiently-stress-test-pod-memory-banner-3dd86c1ed5645a75c8cd7c2236a7c41a.jpg"}}]);