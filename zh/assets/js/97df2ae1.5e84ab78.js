"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[9159],{54367:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>m});var n=a(11527),o=a(45305);const s={slug:"/building_automated_testing_framework",title:"Building an Automated Testing Framework Based on Chaos Mesh and Argo",author:"Ben Ye, Chengwen Yin",author_title:"Maintainer of Chaos Mesh",author_url:"https://github.com/chaos-mesh/chaos-mesh/blob/master/MAINTAINERS.md",author_image_url:"https://avatars1.githubusercontent.com/u/59082378?v=4",image:"/img/blog/automated_testing_framework.png",tags:["Chaos Mesh","Chaos Engineering","Test Automation"]},i=void 0,r={permalink:"/zh/blog/building_automated_testing_framework",editUrl:"https://github.com/chaos-mesh/website/edit/master/blog/2020-08-14-building_automated_testing_framework.md",source:"@site/blog/2020-08-14-building_automated_testing_framework.md",title:"Building an Automated Testing Framework Based on Chaos Mesh and Argo",description:"TiPocket - Automated Testing Framework",date:"2020-08-14T00:00:00.000Z",formattedDate:"2020\u5e748\u670814\u65e5",tags:[{label:"Chaos Mesh",permalink:"/zh/blog/tags/chaos-mesh"},{label:"Chaos Engineering",permalink:"/zh/blog/tags/chaos-engineering"},{label:"Test Automation",permalink:"/zh/blog/tags/test-automation"}],readingTime:7.83,hasTruncateMarker:!0,authors:[{name:"Ben Ye, Chengwen Yin",title:"Maintainer of Chaos Mesh",url:"https://github.com/chaos-mesh/chaos-mesh/blob/master/MAINTAINERS.md",imageURL:"https://avatars1.githubusercontent.com/u/59082378?v=4"}],frontMatter:{slug:"/building_automated_testing_framework",title:"Building an Automated Testing Framework Based on Chaos Mesh and Argo",author:"Ben Ye, Chengwen Yin",author_title:"Maintainer of Chaos Mesh",author_url:"https://github.com/chaos-mesh/chaos-mesh/blob/master/MAINTAINERS.md",author_image_url:"https://avatars1.githubusercontent.com/u/59082378?v=4",image:"/img/blog/automated_testing_framework.png",tags:["Chaos Mesh","Chaos Engineering","Test Automation"]},unlisted:!1,prevItem:{title:"chaos-mesh-action: Integrate Chaos Engineering into Your CI",permalink:"/zh/blog/chaos-mesh-action-integrate-chaos-engineering-into-your-ci"},nextItem:{title:"Chaos Mesh Joins CNCF as a Sandbox Project",permalink:"/zh/blog/chaos-mesh-join-cncf-sandbox-project"}},h={authorsImageUrls:[void 0]},m=[];function g(e){const t={a:"a",img:"img",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"TiPocket - Automated Testing Framework",src:a(68500).Z+"",width:"1600",height:"533"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/chaos-mesh/chaos-mesh",children:"Chaos Mesh"})," is an open-source chaos engineering platform for Kubernetes. Although it provides rich capabilities to simulate abnormal system conditions, it still only solves a fraction of the Chaos Engineering puzzle. Besides fault injection, a full chaos engineering application consists of hypothesizing around defined steady states, running experiments in production, validating the system via test cases, and automating the testing."]}),"\n",(0,n.jsxs)(t.p,{children:["This article describes how we use ",(0,n.jsx)(t.a,{href:"https://github.com/pingcap/tipocket",children:"TiPocket"}),", an automated testing framework to build a full Chaos Engineering testing loop for TiDB, our distributed database."]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},68500:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/automated_testing_framework-c5405e59cb081273dba539dc8be612bc.png"},45305:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>i});var n=a(50959);const o={},s=n.createContext(o);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);