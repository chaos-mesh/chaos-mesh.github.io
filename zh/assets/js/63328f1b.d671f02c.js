"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[3082],{81990:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var n=a(86070),o=a(6383);const s={slug:"/how-to-simulate-io-faults-at-runtime",title:"How to Simulate I/O Faults at Runtime",authors:"keaoyang",image:"/img/blog/how-to-simulate-io-faults-at-runtime.jpg",tags:["Chaos Mesh","Chaos Engineering","Fault Injection"]},i=void 0,r={permalink:"/zh/blog/how-to-simulate-io-faults-at-runtime",editUrl:"https://github.com/chaos-mesh/website/edit/master/blog/2021-01-08-how-to-simulate-io-faults-at-runtime.md",source:"@site/blog/2021-01-08-how-to-simulate-io-faults-at-runtime.md",title:"How to Simulate I/O Faults at Runtime",description:"Chaos Engineering - How to simulate I/O faults at runtime",date:"2021-01-08T00:00:00.000Z",tags:[{inline:!0,label:"Chaos Mesh",permalink:"/zh/blog/tags/chaos-mesh"},{inline:!0,label:"Chaos Engineering",permalink:"/zh/blog/tags/chaos-engineering"},{inline:!0,label:"Fault Injection",permalink:"/zh/blog/tags/fault-injection"}],readingTime:8.91,hasTruncateMarker:!0,authors:[{name:"Keao Yang",title:"Maintainer of Chaos Mesh",url:"https://github.com/YangKeao",imageURL:"https://avatars.githubusercontent.com/u/5244316?v=4",key:"keaoyang",page:null}],frontMatter:{slug:"/how-to-simulate-io-faults-at-runtime",title:"How to Simulate I/O Faults at Runtime",authors:"keaoyang",image:"/img/blog/how-to-simulate-io-faults-at-runtime.jpg",tags:["Chaos Mesh","Chaos Engineering","Fault Injection"]},unlisted:!1,prevItem:{title:"Celebrating One Year of Chaos Mesh: Looking Back and Ahead",permalink:"/zh/blog/celebrating-one-year-of-chaos-mesh-looking-back-and-ahead"},nextItem:{title:"How a Top Game Company Uses Chaos Engineering to Improve Testing",permalink:"/zh/blog/how-a-top-game-company-uses-chaos-engineering-to-improve-testing"}},l={authorsImageUrls:[void 0]},u=[];function m(e){const t={img:"img",p:"p",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Chaos Engineering - How to simulate I/O faults at runtime",src:a(33048).A+"",width:"3126",height:"1043"})}),"\n",(0,n.jsx)(t.p,{children:"In a production environment, filesystem faults might occur due to various incidents such as disk failures and administrator errors. As a Chaos Engineering platform, Chaos Mesh has supported simulating I/O faults in a filesystem ever since its early versions. By simply adding an IOChaos CustomResourceDefinition (CRD), we can watch how the filesystem fails and returns errors."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},33048:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/how-to-simulate-io-faults-at-runtime-39daaf89aa83a5be58402f763db0d5c5.jpg"},6383:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>r});var n=a(30758);const o={},s=n.createContext(o);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);