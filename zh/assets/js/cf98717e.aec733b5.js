"use strict";(self.webpackChunkchaos_mesh_website=self.webpackChunkchaos_mesh_website||[]).push([[13531],{49613:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var o=a(59496);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=o.createContext({}),h=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=h(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=h(a),m=n,d=u["".concat(l,".").concat(m)]||u[m]||p[m]||s;return a?o.createElement(d,r(r({ref:t},c),{},{components:a})):o.createElement(d,r({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,r=new Array(s);r[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,r[1]=i;for(var h=2;h<s;h++)r[h]=a[h];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3769:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>h});var o=a(60795),n=(a(59496),a(49613));const s={slug:"/chaos-mesh-1.0-chaos-engineering-on-kubernetes-made-easier",title:"Chaos Mesh 1.0: Chaos Engineering on Kubernetes Made Easier",author:"Chaos Mesh Maintainers",author_url:"https://github.com/chaos-mesh",author_image_url:"https://avatars1.githubusercontent.com/u/59082378?v=4",image:"/img/blog/chaos-mesh-1.0.png",tags:["Announcement","Chaos Mesh","Chaos Engineering"]},r=void 0,i={permalink:"/zh/blog/chaos-mesh-1.0-chaos-engineering-on-kubernetes-made-easier",editUrl:"https://github.com/chaos-mesh/website/edit/master/blog/2020-9-25-chaos-mesh-1.0-chaos-engineering-on-kubernetes-made-easier.md",source:"@site/blog/2020-9-25-chaos-mesh-1.0-chaos-engineering-on-kubernetes-made-easier.md",title:"Chaos Mesh 1.0: Chaos Engineering on Kubernetes Made Easier",description:"Chaos-Mesh-1.0 - Chaos-Engineering-on-Kubernetes-Made-Easier",date:"2020-09-25T00:00:00.000Z",formattedDate:"2020\u5e749\u670825\u65e5",tags:[{label:"Announcement",permalink:"/zh/blog/tags/announcement"},{label:"Chaos Mesh",permalink:"/zh/blog/tags/chaos-mesh"},{label:"Chaos Engineering",permalink:"/zh/blog/tags/chaos-engineering"}],readingTime:2.99,hasTruncateMarker:!0,authors:[{name:"Chaos Mesh Maintainers",url:"https://github.com/chaos-mesh",imageURL:"https://avatars1.githubusercontent.com/u/59082378?v=4"}],frontMatter:{slug:"/chaos-mesh-1.0-chaos-engineering-on-kubernetes-made-easier",title:"Chaos Mesh 1.0: Chaos Engineering on Kubernetes Made Easier",author:"Chaos Mesh Maintainers",author_url:"https://github.com/chaos-mesh",author_image_url:"https://avatars1.githubusercontent.com/u/59082378?v=4",image:"/img/blog/chaos-mesh-1.0.png",tags:["Announcement","Chaos Mesh","Chaos Engineering"]},prevItem:{title:"Chaos Mesh X Hacktoberfest 2020 - An Invitation to Open Source",permalink:"/zh/blog/chaos-mesh-x-hacktoberfest-2020"},nextItem:{title:"chaos-mesh-action: Integrate Chaos Engineering into Your CI",permalink:"/zh/blog/chaos-mesh-action-integrate-chaos-engineering-into-your-ci"}},l={authorsImageUrls:[void 0]},h=[{value:"Powerful chaos support",id:"powerful-chaos-support",level:2},{value:"Visual chaos orchestration",id:"visual-chaos-orchestration",level:2},{value:"Grafana plug-in for enhanced observability",id:"grafana-plug-in-for-enhanced-observability",level:2},{value:"Safe and controllable chaos",id:"safe-and-controllable-chaos",level:2},{value:"Try it out now",id:"try-it-out-now",level:2},{value:"Thanks",id:"thanks",level:2}],c={toc:h},u="wrapper";function p(e){let{components:t,...s}=e;return(0,n.kt)(u,(0,o.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Chaos-Mesh-1.0 - Chaos-Engineering-on-Kubernetes-Made-Easier",src:a(4632).Z,width:"1600",height:"534"})),(0,n.kt)("p",null,"Today, we are proud to announce the general availability of Chaos Mesh 1.0, following its entry into CNCF as a ",(0,n.kt)("a",{parentName:"p",href:"https://pingcap.com/blog/announcing-chaos-mesh-as-a-cncf-sandbox-project"},"sandbox project")," in July, 2020."),(0,n.kt)("p",null,"Chaos Mesh 1.0 is a major milestone in the project\u2019s development. After 10 months of effort within the open-source community, Chaos Mesh is now ready in terms of functionality, scalability, and ease of use. Here are some highlights."),(0,n.kt)("h2",{id:"powerful-chaos-support"},"Powerful chaos support"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://chaos-mesh.org"},"Chaos Mesh")," originated in the testing framework of ",(0,n.kt)("a",{parentName:"p",href:"https://pingcap.com/products/tidb"},"TiDB"),", a distributed database, so it takes into account the possible faults of a distributed system. Chaos Mesh provides comprehensive and fine-grained fault types, covering the Pod, the network, system I/O, and the kernel. Chaos experiments are defined in YAML, which is fast and easy to use."),(0,n.kt)("p",null,"Chaos Mesh 1.0 supports the following fault types:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"clock-skew: Simulates clock skew"),(0,n.kt)("li",{parentName:"ul"},"container-kill: Simulates the container being killed"),(0,n.kt)("li",{parentName:"ul"},"cpu-burn: Simulates CPU pressure"),(0,n.kt)("li",{parentName:"ul"},"io-attribution-override: Simulates file exceptions"),(0,n.kt)("li",{parentName:"ul"},"io-fault: Simulates file system I/O errors"),(0,n.kt)("li",{parentName:"ul"},"io-latency: Simulates file system I/O latency"),(0,n.kt)("li",{parentName:"ul"},"kernel-injection: Simulates kernel failures"),(0,n.kt)("li",{parentName:"ul"},"memory-burn: Simulates memory pressure"),(0,n.kt)("li",{parentName:"ul"},"network-corrupt: Simulates network packet corruption"),(0,n.kt)("li",{parentName:"ul"},"network-duplication: Simulates network packet duplication"),(0,n.kt)("li",{parentName:"ul"},"network-latency: Simulate network latency"),(0,n.kt)("li",{parentName:"ul"},"network-loss: Simulates network loss"),(0,n.kt)("li",{parentName:"ul"},"network-partition: Simulates network partition"),(0,n.kt)("li",{parentName:"ul"},"pod-failure: Simulates continuous unavailability of Kubernetes Pods"),(0,n.kt)("li",{parentName:"ul"},"pod-kill: Simulates the Kubernetes Pod being killed")),(0,n.kt)("h2",{id:"visual-chaos-orchestration"},"Visual chaos orchestration"),(0,n.kt)("p",null,"The Chaos Dashboard component is a one-stop web interface for Chaos Mesh users to orchestrate chaos experiments. Previously, Chaos Dashboard was only available for testing TiDB. With Chaos Mesh 1.0, it is available to everyone. Chaos Dashboard greatly simplifies the complexity of chaos experiments. With only a few mouse clicks, you can define the scope of the chaos experiment, specify the type of chaos injection, define scheduling rules, and observe the results of the chaos experiment\u2014all in the same web interface."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Chaos Dashboard",src:a(63716).Z,width:"1920",height:"968"})),(0,n.kt)("h2",{id:"grafana-plug-in-for-enhanced-observability"},"Grafana plug-in for enhanced observability"),(0,n.kt)("p",null,"To further improve the observability of chaos experiments, Chaos Mesh 1.0 includes a Grafana plug-in to allow you to directly display real-time chaos experiment information on your application monitoring panel. Currently, the chaos experiment information is displayed as annotations. This way, you can simultaneously observe the running status of the application and the current chaos experiment information."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Chaos status and application status on Grafana",src:a(67073).Z,width:"1600",height:"790"})),(0,n.kt)("h2",{id:"safe-and-controllable-chaos"},"Safe and controllable chaos"),(0,n.kt)("p",null,"When we conduct chaos experiments, it is vital that we keep strict control over the chaos scope or \u201cblast radius.\u201d Chaos Mesh 1.0 not only provides a wealth of selectors to accurately control the scope of the experiment, but it also enables you to set protected Namespaces to protect important applications. You can also use Namespace permissions to limit the scope of Chaos Mesh to a specific Namespace. Together, these features make chaos experiments with Chaos Mesh safe and controllable."),(0,n.kt)("h2",{id:"try-it-out-now"},"Try it out now"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"2022-10-24: Because of ",(0,n.kt)("a",{parentName:"p",href:"https://www.oreilly.com/online-learning/leveraging-katacoda-technology.html"},"https://www.oreilly.com/online-learning/leveraging-katacoda-technology.html"),", and refer to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/website/pull/356"},"#356"),", the interactive tutorial is temporarily unavailable.")),(0,n.kt)("p",null,"You can quickly deploy Chaos Mesh in your Kubernetes environment through the ",(0,n.kt)("inlineCode",{parentName:"p"},"install.sh")," script or the Helm tool. For specific installation steps, please refer to the ",(0,n.kt)("a",{parentName:"p",href:"https://chaos-mesh-website-archived.netlify.app/docs/1.2.4/user_guides/installation"},"Chaos Mesh Getting Started")," document. In addition, thanks to the ",(0,n.kt)("inlineCode",{parentName:"p"},"Katakoda interactive tutorial"),", you can also quickly get your hands on Chaos Mesh without having to deploy it."),(0,n.kt)("p",null,"If you haven\u2019t upgraded to 1.0 GA, please refer to the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/chaos-mesh/releases/tag/v1.0.0"},"1.0 Release Notes")," for the changes and upgrade guidelines."),(0,n.kt)("h2",{id:"thanks"},"Thanks"),(0,n.kt)("p",null,"Thanks to all our Chaos Mesh ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/chaos-mesh/chaos-mesh/graphs/contributors"},"contributors"),"!"),(0,n.kt)("p",null,"If you are interested in Chaos Mesh, you\u2019re welcome to join us by submitting issues, or contributing code, documentation, or articles. We look forward to your participation and feedback!"))}p.isMDXComponent=!0},63716:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/chaos-dashboard-0a1e48c54968d276f174801a1364ce21.gif"},4632:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/chaos-mesh-1.0-22c3415bc75bde8501087d6c7c154cd5.png"},67073:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/chaos-status-460b054f3e2ee0898d2236a5137bc30e.png"}}]);